/*****************************************************************************

    ps.defs
    MIG definitions for NextDimenion PostScript client/server.
    
    CONFIDENTIAL
    Copyright 1990 NeXT Computer, Inc. as an unpublished work.
    All Rights Reserved.

    01Aug90 Ted Cohn
    
    Modifications:

******************************************************************************/

subsystem ps 100;

#import <std_types.defs>
import "package_specs.h";
import "bitmap.h";
uimport "psUser.h";

type byte		= MSG_TYPE_BYTE;
type Bitmap		= struct [24] of byte;
type LocalBitmap	= struct [44] of byte;
type RemoteBitmap	= struct [32] of byte;
type BMCompOp		= struct [60] of byte;
type Bounds		= struct [8]  of byte;
type Pattern		= struct [20] of byte;
type DevPoint		= int;

skip;	/* ps_rbm_makePublic 100 */

skip;	/* ps_rbm_mark 101 */

procedure ps_ping (
    	port		: port_t
);

/* Must be synchronous so remote side can prepare itself for initial cursor
 * operation at startup, else might miss this important phase.
 */
procedure ps_init (
    	port		: port_t;
    	ndport		: port_t;
	owner		: port_t;
   	slot		: int;
    	bounds		: Bounds
);

procedure ps_rbm_newRemote (
	port		: port_t;
	rbmtype		: int;
	special		: int;
	bounds		: Bounds;
    out addr		: int;
    out base		: Bitmap
);

procedure ps_rbm_remoteFromData (
	port		: port_t;
	rbmtype		: int;
	bounds		: Bounds;
	bits		: pointer_t;
	abits		: pointer_t;
	rowBytes	: int;
    out addr		: int;
    out base		: Bitmap
);
					
simpleprocedure ps_rbm_free (
	port		: port_t;
	rbm		: int
);
					
simpleprocedure ps_rbm_composite (
    	port		: port_t;
	dbm		: int;
    	bcop		: BMCompOp
);	
			
simpleprocedure ps_rbm_composite_bm (
    	port		: port_t;
	dbm		: int;
	sbm		: int;
    	bcop		: BMCompOp
);		
		
simpleprocedure ps_rbm_composite_lbm (
    	port		: port_t;
	dbm		: int;
    	bcop		: BMCompOp;
    	sbm		: LocalBitmap;
    	bits		: pointer_t;
	abits		: pointer_t
);		
		
simpleprocedure ps_rbm_composite_pat (
    	port		: port_t;
	dbm		: int;
    	bcop		: BMCompOp;
	spat		: Pattern
);				

simpleprocedure ps_rbm_convertFrom (
    	port		: port_t;
	dbm		: int;
	dBounds		: Bounds;
	sBounds		: Bounds;
	phase		: DevPoint;
	sbm		: int
);				

simpleprocedure ps_rbm_convertFrom_local (
    	port		: port_t;
	dbm		: int;
	dBounds		: Bounds;
	sBounds		: Bounds;
	phase		: DevPoint;
	sbm		: LocalBitmap;
	bits		: pointer_t;
	abits		: pointer_t
);				

simpleprocedure ps_rbm_newAlpha (
	port		: port_t;
	rbm		: int;
	initialize	: boolean_t
);

simpleprocedure ps_rbm_offset (
	port		: port_t;
	rbm		: int;
	dx		: short;
	dy		: short
);

function ps_rbm_sizeInfo (
	port		: port_t;
	rbm		: int
) : int;

simpleprocedure ps_promoteWindow (
	port		: port_t;
	new		: int;
	old		: int;
	bounds		: Bounds;
	phase		: DevPoint;
	newDepth	: int
);

simpleprocedure ps_set_cursor (
	port		: port_t;
	ltype		: int;
	rowBytes	: int;
	bits		: pointer_t;
	abits		: pointer_t
);

simpleprocedure ps_display_cursor (
	port		: port_t;
	crsrRect	: Bounds
);

simpleprocedure ps_remove_cursor (
	port		: port_t
);

simpleprocedure ps_sync_cursor_a (
	port		: port_t
);

procedure ps_sync_cursor (
	port		: port_t
);



simpleprocedure ps_set_video_loc (
	port		: port_t ;
	bm		: int ;
	x		: int ;
	y		: int
);

simpleprocedure ps_video_dma (
	port		: port_t ;
	on		: int
);

simpleprocedure ps_video_setrect (
	port		: port_t ;
	x1		: int ;
	y1		: int ;
	x2		: int ;
	y2		: int 
);

simpleprocedure ps_video_clearrect (
	port		: port_t ;
	x1		: int ;
	y1		: int ;
	x2		: int ;
	y2		: int 
);

simpleprocedure ps_iicsendbytes (
	port		: port_t ;
	iicaddr		: int ;
	iicdata		: pointer_t 
);
