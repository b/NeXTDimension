{\rtf0\ansi{\fonttbl\f0\fmodern Courier;}
\paperw13040
\paperh10200
\margl120
\margr120
{\f0\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 assert_wait		In API now\
bcopy			In API now\
bzero			In API now\
cdevsw			In API now\
convert_port_to_map			Convert a task port into the task's map,\
					for mapping hardware into task's addr space.\
current_map				Used when manipulating driver's state.\
current_task				}
{\f0\fs24\fi0\li0\ql\gray0 \tx1140 \tx2300 \tx3440 \tx4600 \tx5760 \tx6900 \tx8060 \tx9200 \tx10360 \tx11520 Used when manipulating driver's state.}
{\f0\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 \
current_thread				}
{\f0\fs24\fi0\li0\ql\gray0 \tx1140 \tx2300 \tx3440 \tx4600 \tx5760 \tx6900 \tx8060 \tx9200 \tx10360 \tx11520 Used when manipulating driver's state.}
{\f0\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 \
ev_register_screen			For frame buffer drivers...\
ev_unregister_screen			For frame buffer drivers...\
evp					Events global, used by frame buffer drivers\
hz					Clock ticks/sec global for timer stuff\
install_polled_intr	In API now\
ioaccess				Used when mapping hardware into kernel\
kalloc			In API now\
kern_serv_notify			Needed to get PORT_DEATH notification.  This\
					function must be passed 2 new entries from the\
					instance variable, }
{\f0\i\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 bootstrap_port}
{\f0\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520  and\
					}
{\f0\i\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 notify_port}
{\f0\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 .  (New as of kern_load-16)\
kern_serv_unwire_range	In API now\
kern_serv_wire_range	In API now\
kernel_thread		In API now\
kfree			In API now\
kmem_alloc_pageable			Get VM address range to map hardware into.\
kmem_free				Free address range from kmem_alloc_pageable\
lock_alloc				Allocate space for a lock.\
lock_done		In API now\
lock_free				Free lock space obtained from lock_alloc\
lock_init		In API now\
lock_read		In API now\
lock_write		In API now\
msg_receive		Mach System call, implicitly in API\
msg_send		In API now\
nbic_present				Global set by NBIC driver if chip is present\
nodev					Place holder for cdevsw, bdevsw entries\
nulldev					Place holder for cdevsw, bdevsw entries\
page_mask				Implicitly brought in by vm/vm_param.h macros\
page_shift				Implicitly brought in by vm/vm_param.h macros\
page_size				Implicitly brought in by vm/vm_param.h macros\
pflush_user				Flush PTEs after mapping hardware into a user\
					task's address space.\
pmap_enter				Associate a hardware page with a virtual address\
					page in a task.\
pmap_tt					Transparently map physical addresses into a \
					thread.\
port_allocate		Mach System call, implicitly in API\
port_deallocate		Mach System call, implicitly in API\
port_set_add		Mach System call, implicitly in API\
port_set_allocate	Mach System call, implicitly in API\
port_set_deallocate	Mach System call, implicitly in API\
port_set_remove		Mach System call, implicitly in API\
port_translate				Convert a port_t to a kern_port_t, as part of\
					converting a task port to a vm_map_t for \
					hardware mapping.\
printf			In API now\
probe_rb		In API now\
softint_sched				Used to call thread_wakeup from an interrupt\
					handler at a priority greater than splsched().\
spl}
{\f0\i\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 n			}
{\f0\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 In API now}
{\f0\i\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 \
}
{\f0\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 splx			In API now}
{\f0\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 \
strcmp					String stuff.}
{\f0\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 \
strcpy}
{\f0\fs24\fi0\li0\ql\gray0 \tx1140 \tx2300 \tx3440 \tx4600 \tx5760 \tx6900 \tx8060 \tx9200 \tx10360 \tx11520 					String stuff.}
{\f0\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 \
strlen}
{\f0\fs24\fi0\li0\ql\gray0 \tx1140 \tx2300 \tx3440 \tx4600 \tx5760 \tx6900 \tx8060 \tx9200 \tx10360 \tx11520 					String stuff.}
{\f0\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 \
task_create}
{\f0\fs24\fi0\li0\ql\gray0 \tx1140 \tx2300 \tx3440 \tx4600 \tx5760 \tx6900 \tx8060 \tx9200 \tx10360 \tx11520 		Mach System call, implicitly in API}
{\f0\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 \
task_self}
{\f0\fs24\fi0\li0\ql\gray0 \tx1140 \tx2300 \tx3440 \tx4600 \tx5760 \tx6900 \tx8060 \tx9200 \tx10360 \tx11520 		Mach System call, implicitly in API}
{\f0\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 \
task_terminate}
{\f0\fs24\fi0\li0\ql\gray0 \tx1140 \tx2300 \tx3440 \tx4600 \tx5760 \tx6900 \tx8060 \tx9200 \tx10360 \tx11520 		Mach System call, implicitly in API}
{\f0\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 \
thread_block		In API now\
thread_halt_self	In API now\
thread_sleep		In API now\
thread_terminate}
{\f0\fs24\fi0\li0\ql\gray0 \tx1140 \tx2300 \tx3440 \tx4600 \tx5760 \tx6900 \tx8060 \tx9200 \tx10360 \tx11520 	Mach System call, implicitly in API}
{\f0\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 \
thread_wakeup		In API now\
timeout					Unix compatible timer service}
{\f0\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 \
uninstall_polled_intr	In API now\
untimeout		In API now}
{\f0\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 \
vm_allocate		In API now\
vm_deallocate		In API now\
vm_map_copy				Used to simulate vm_write() and vm_read()\
					operations within the kernel.  The kernel\
					vm_write() and vm_read() only move data to and\
					from the ipc address space, which isn't what I\
					need.\
vm_map_deallocate			Decrements reference count incremented by \
					convert_port_to_map(), when driver gives up\
					access to map.\
vm_move					Move data between task address spaces,\
					specifically, out of line message data and\
					memory shared with the NextDimension board.\
vm_protect}
{\f0\fs24\fi0\li0\ql\gray0 \tx1140 \tx2300 \tx3440 \tx4600 \tx5760 \tx6900 \tx8060 \tx9200 \tx10360 \tx11520 		Mach System call, implicitly in API}
{\f0\fs24\fi0\li0\ql\gray0 \tx1152 \tx2304 \tx3456 \tx4608 \tx5760 \tx6912 \tx8064 \tx9216 \tx10368 \tx11520 \
}
}
